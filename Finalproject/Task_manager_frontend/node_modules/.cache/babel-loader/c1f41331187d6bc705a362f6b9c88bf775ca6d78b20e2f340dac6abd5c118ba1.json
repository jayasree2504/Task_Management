{"ast":null,"code":"var _jsxFileName = \"/home/hp/Task_manager_frontend/src/components/subtask/subtask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubtaskCreator() {\n  _s();\n  const {\n    taskId\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Modify state to include description, status, and due_date\n  const [subtaskData, setSubtaskData] = useState({\n    title: \"\",\n    description: \"\",\n    status: \"To Do\",\n    // Default status\n    due_date: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Construct the request payload based on the new structure\n    const response = await fetch(`http://localhost:3000/api/v1/tasks/${taskId}/subtasks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        subtask: {\n          title: subtaskData.title,\n          description: subtaskData.description,\n          status: subtaskData.status,\n          due_date: subtaskData.due_date\n        }\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      // Optionally handle the response data here\n      alert(`Subtask successfully created: ${data.subtask.title}`);\n      navigate(\"/dashboard\");\n    } else {\n      alert(\"Error adding subtask\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Subtask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Subtask Title\",\n        value: subtaskData.title,\n        onChange: e => setSubtaskData({\n          ...subtaskData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: subtaskData.description,\n        onChange: e => setSubtaskData({\n          ...subtaskData,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: subtaskData.due_date,\n        onChange: e => setSubtaskData({\n          ...subtaskData,\n          due_date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Subtask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(SubtaskCreator, \"lONFxZoyRHYxxs0jlzhgQRc7UuA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SubtaskCreator;\nexport default SubtaskCreator;\nvar _c;\n$RefreshReg$(_c, \"SubtaskCreator\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","SubtaskCreator","_s","taskId","navigate","subtaskData","setSubtaskData","title","description","status","due_date","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","subtask","ok","data","json","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/hp/Task_manager_frontend/src/components/subtask/subtask.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nfunction SubtaskCreator() {\n    const { taskId } = useParams();\n    const navigate = useNavigate();\n\n    // Modify state to include description, status, and due_date\n    const [subtaskData, setSubtaskData] = useState({\n        title: \"\",\n        description: \"\",\n        status: \"To Do\", // Default status\n        due_date: \"\",\n    });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Construct the request payload based on the new structure\n        const response = await fetch(`http://localhost:3000/api/v1/tasks/${taskId}/subtasks`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                subtask: {\n                    title: subtaskData.title,\n                    description: subtaskData.description,\n                    status: subtaskData.status,\n                    due_date: subtaskData.due_date,\n                }\n            }),\n        });\n\n        if (response.ok) {\n            const data = await response.json();\n            // Optionally handle the response data here\n            alert(`Subtask successfully created: ${data.subtask.title}`);\n            navigate(\"/dashboard\");\n        } else {\n            alert(\"Error adding subtask\");\n        }\n    };\n\n    return (\n        <div>\n            <h2>Create Subtask</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Subtask Title\"\n                    value={subtaskData.title}\n                    onChange={(e) => setSubtaskData({ ...subtaskData, title: e.target.value })}\n                />\n                <textarea\n                    placeholder=\"Description\"\n                    value={subtaskData.description}\n                    onChange={(e) => setSubtaskData({ ...subtaskData, description: e.target.value })}\n                />\n                <input\n                    type=\"date\"\n                    value={subtaskData.due_date}\n                    onChange={(e) => setSubtaskData({ ...subtaskData, due_date: e.target.value })}\n                />\n                <button type=\"submit\">Add Subtask</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SubtaskCreator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}