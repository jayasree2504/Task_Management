{"ast":null,"code":"var _jsxFileName = \"/home/hp/Task_manager_frontend/src/components/login/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare the request body based on the formData\n    const requestBody = isRegistering ? {\n      user: {\n        email: formData.username,\n        // Assuming \"username\" corresponds to the email now\n        password: formData.password,\n        password_confirmation: formData.password // Password confirmation for registration\n      }\n    } : {\n      email: formData.username,\n      // Login expects email and password\n      password: formData.password\n    };\n    const endpoint = isRegistering ? \"http://localhost:3000/api/v1/users\" : \"http://localhost:3000/api/v1/users/login\"; // Adjust login API as needed\n\n    try {\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        if (isRegistering) {\n          setMessage(data.message || \"Registration successful\");\n          console.log(\"Token:\", data.token);\n          localStorage.setItem('authToken', data.token); // Store token in localStorage\n          setTimeout(() => navigate(\"/dashboard\"), 2000);\n        } else {\n          setMessage(\"Login successful\");\n          console.log(\"Token:\", data.token);\n          localStorage.setItem('authToken', data.token); // Store token in localStorage\n          navigate(\"/dashboard\");\n        }\n      } else {\n        setMessage(data.message || \"Error occurred\");\n      }\n    } catch (error) {\n      setMessage(\"Network error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? \"Register\" : \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: formData.username,\n        onChange: e => setFormData({\n          ...formData,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isRegistering ? \"Register\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRegistering(!isRegistering),\n      children: isRegistering ? \"Switch to Login\" : \"Switch to Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"W1RG/2ZmUQAthAdBw9OmRxgYAOo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nLogin.propTypes = {};\nLogin.defaultProps = {};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","isRegistering","setIsRegistering","formData","setFormData","username","password","message","setMessage","navigate","handleSubmit","e","preventDefault","requestBody","user","email","password_confirmation","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","token","localStorage","setItem","setTimeout","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/hp/Task_manager_frontend/src/components/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login() {\n    const [isRegistering, setIsRegistering] = useState(false);\n    const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n    const [message, setMessage] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Prepare the request body based on the formData\n        const requestBody = isRegistering\n            ? {\n                  user: {\n                      email: formData.username, // Assuming \"username\" corresponds to the email now\n                      password: formData.password,\n                      password_confirmation: formData.password, // Password confirmation for registration\n                  },\n              }\n            : {\n                  email: formData.username, // Login expects email and password\n                  password: formData.password,\n              };\n\n        const endpoint = isRegistering\n            ? \"http://localhost:3000/api/v1/users\"\n            : \"http://localhost:3000/api/v1/users/login\"; // Adjust login API as needed\n\n        try {\n            const response = await fetch(endpoint, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(requestBody),\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                if (isRegistering) {\n                    setMessage(data.message || \"Registration successful\");\n                    console.log(\"Token:\", data.token);\n                    localStorage.setItem('authToken', data.token); // Store token in localStorage\n                    setTimeout(() => navigate(\"/dashboard\"), 2000);\n                } else {\n                    setMessage(\"Login successful\");\n                    console.log(\"Token:\", data.token);\n                    localStorage.setItem('authToken', data.token); // Store token in localStorage\n                    navigate(\"/dashboard\");\n                }\n            } else {\n                setMessage(data.message || \"Error occurred\");\n            }\n        } catch (error) {\n            setMessage(\"Network error\");\n        }\n    };\n\n    return (\n        <div>\n            <h2>{isRegistering ? \"Register\" : \"Login\"}</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    value={formData.username}\n                    onChange={(e) => setFormData({ ...formData, username: e.target.value })}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={formData.password}\n                    onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                />\n                <button type=\"submit\">{isRegistering ? \"Register\" : \"Login\"}</button>\n            </form>\n            <button onClick={() => setIsRegistering(!isRegistering)}>\n                {isRegistering ? \"Switch to Login\" : \"Switch to Register\"}\n            </button>\n            {message && <p>{message}</p>}\n        </div>\n    );\n}\n\nLogin.propTypes = {};\n\nLogin.defaultProps = {};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}